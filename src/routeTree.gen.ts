/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AboutRouteImport } from './routes/about'
import { Route as IndexRouteImport } from './routes/index'
import { Route as SkillsIndexRouteImport } from './routes/skills.index'
import { Route as JobsIndexRouteImport } from './routes/jobs.index'
import { Route as CompaniesIndexRouteImport } from './routes/companies.index'
import { Route as JobsIdRouteImport } from './routes/jobs.$id'
import { Route as CompaniesIdRouteImport } from './routes/companies.$id'
import { Route as SkillsIdIndexRouteImport } from './routes/skills.$id.index'
import { Route as SkillsIdSkill_versionsSkill_version_idRouteImport } from './routes/skills.$id.skill_versions.$skill_version_id'

const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const SkillsIndexRoute = SkillsIndexRouteImport.update({
  id: '/skills/',
  path: '/skills/',
  getParentRoute: () => rootRouteImport,
} as any)
const JobsIndexRoute = JobsIndexRouteImport.update({
  id: '/jobs/',
  path: '/jobs/',
  getParentRoute: () => rootRouteImport,
} as any)
const CompaniesIndexRoute = CompaniesIndexRouteImport.update({
  id: '/companies/',
  path: '/companies/',
  getParentRoute: () => rootRouteImport,
} as any)
const JobsIdRoute = JobsIdRouteImport.update({
  id: '/jobs/$id',
  path: '/jobs/$id',
  getParentRoute: () => rootRouteImport,
} as any)
const CompaniesIdRoute = CompaniesIdRouteImport.update({
  id: '/companies/$id',
  path: '/companies/$id',
  getParentRoute: () => rootRouteImport,
} as any)
const SkillsIdIndexRoute = SkillsIdIndexRouteImport.update({
  id: '/skills/$id/',
  path: '/skills/$id/',
  getParentRoute: () => rootRouteImport,
} as any)
const SkillsIdSkill_versionsSkill_version_idRoute =
  SkillsIdSkill_versionsSkill_version_idRouteImport.update({
    id: '/skills/$id/skill_versions/$skill_version_id',
    path: '/skills/$id/skill_versions/$skill_version_id',
    getParentRoute: () => rootRouteImport,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/companies/$id': typeof CompaniesIdRoute
  '/jobs/$id': typeof JobsIdRoute
  '/companies': typeof CompaniesIndexRoute
  '/jobs': typeof JobsIndexRoute
  '/skills': typeof SkillsIndexRoute
  '/skills/$id': typeof SkillsIdIndexRoute
  '/skills/$id/skill_versions/$skill_version_id': typeof SkillsIdSkill_versionsSkill_version_idRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/companies/$id': typeof CompaniesIdRoute
  '/jobs/$id': typeof JobsIdRoute
  '/companies': typeof CompaniesIndexRoute
  '/jobs': typeof JobsIndexRoute
  '/skills': typeof SkillsIndexRoute
  '/skills/$id': typeof SkillsIdIndexRoute
  '/skills/$id/skill_versions/$skill_version_id': typeof SkillsIdSkill_versionsSkill_version_idRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/companies/$id': typeof CompaniesIdRoute
  '/jobs/$id': typeof JobsIdRoute
  '/companies/': typeof CompaniesIndexRoute
  '/jobs/': typeof JobsIndexRoute
  '/skills/': typeof SkillsIndexRoute
  '/skills/$id/': typeof SkillsIdIndexRoute
  '/skills/$id/skill_versions/$skill_version_id': typeof SkillsIdSkill_versionsSkill_version_idRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/companies/$id'
    | '/jobs/$id'
    | '/companies'
    | '/jobs'
    | '/skills'
    | '/skills/$id'
    | '/skills/$id/skill_versions/$skill_version_id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/companies/$id'
    | '/jobs/$id'
    | '/companies'
    | '/jobs'
    | '/skills'
    | '/skills/$id'
    | '/skills/$id/skill_versions/$skill_version_id'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/companies/$id'
    | '/jobs/$id'
    | '/companies/'
    | '/jobs/'
    | '/skills/'
    | '/skills/$id/'
    | '/skills/$id/skill_versions/$skill_version_id'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  CompaniesIdRoute: typeof CompaniesIdRoute
  JobsIdRoute: typeof JobsIdRoute
  CompaniesIndexRoute: typeof CompaniesIndexRoute
  JobsIndexRoute: typeof JobsIndexRoute
  SkillsIndexRoute: typeof SkillsIndexRoute
  SkillsIdIndexRoute: typeof SkillsIdIndexRoute
  SkillsIdSkill_versionsSkill_version_idRoute: typeof SkillsIdSkill_versionsSkill_version_idRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/skills/': {
      id: '/skills/'
      path: '/skills'
      fullPath: '/skills'
      preLoaderRoute: typeof SkillsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/jobs/': {
      id: '/jobs/'
      path: '/jobs'
      fullPath: '/jobs'
      preLoaderRoute: typeof JobsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/companies/': {
      id: '/companies/'
      path: '/companies'
      fullPath: '/companies'
      preLoaderRoute: typeof CompaniesIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/jobs/$id': {
      id: '/jobs/$id'
      path: '/jobs/$id'
      fullPath: '/jobs/$id'
      preLoaderRoute: typeof JobsIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/companies/$id': {
      id: '/companies/$id'
      path: '/companies/$id'
      fullPath: '/companies/$id'
      preLoaderRoute: typeof CompaniesIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/skills/$id/': {
      id: '/skills/$id/'
      path: '/skills/$id'
      fullPath: '/skills/$id'
      preLoaderRoute: typeof SkillsIdIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/skills/$id/skill_versions/$skill_version_id': {
      id: '/skills/$id/skill_versions/$skill_version_id'
      path: '/skills/$id/skill_versions/$skill_version_id'
      fullPath: '/skills/$id/skill_versions/$skill_version_id'
      preLoaderRoute: typeof SkillsIdSkill_versionsSkill_version_idRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  CompaniesIdRoute: CompaniesIdRoute,
  JobsIdRoute: JobsIdRoute,
  CompaniesIndexRoute: CompaniesIndexRoute,
  JobsIndexRoute: JobsIndexRoute,
  SkillsIndexRoute: SkillsIndexRoute,
  SkillsIdIndexRoute: SkillsIdIndexRoute,
  SkillsIdSkill_versionsSkill_version_idRoute:
    SkillsIdSkill_versionsSkill_version_idRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
